import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Stock {
    private String symbol;
    private double price;

    public Stock(String symbol, double price) {
        this.symbol = symbol;
        this.price = price;
    }

    public String getSymbol() {
        return symbol;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }
}

class Portfolio {
    private List<Stock> stocks;
    private double balance;

    public Portfolio() {
        this.stocks = new ArrayList<>();
        this.balance = 0.0;
    }

    public void addStock(Stock stock, int quantity) {
        stocks.add(stock);
        balance -= stock.getPrice() * quantity;
    }

    public void removeStock(Stock stock, int quantity) {
        stocks.remove(stock);
        balance += stock.getPrice() * quantity;
    }

    public double getBalance() {
        return balance;
    }

    public List<Stock> getStocks() {
        return stocks;
    }
}

public class StockTradingPlatform {
    private Portfolio portfolio;
    private List<Stock> marketData;

    public StockTradingPlatform() {
        this.portfolio = new Portfolio();
        this.marketData = new ArrayList<>();

        // Initialize market data with some sample stocks
        marketData.add(new Stock("AAPL", 150.0));
        marketData.add(new Stock("GOOG", 2500.0));
        marketData.add(new Stock("MSFT", 200.0));
    }

    public void run() {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Buy Stock");
            System.out.println("2. Sell Stock");
            System.out.println("3. View Portfolio");
            System.out.println("4. Exit");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    buyStock(scanner);
                    break;
                case 2:
                    sellStock(scanner);
                    break;
                case 3:
                    viewPortfolio();
                    break;
                case 4:
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private void buyStock(Scanner scanner) {
        System.out.println("Enter stock symbol:");
        String symbol = scanner.next();

        System.out.println("Enter quantity:");
        int quantity = scanner.nextInt();

        Stock stock = getStock(symbol);
        if (stock != null) {
            portfolio.addStock(stock, quantity);
            System.out.println("Stock bought successfully!");
        } else {
            System.out.println("Stock not found.");
        }
    }

    private void sellStock(Scanner scanner) {
        System.out.println("Enter stock symbol:");
        String symbol = scanner.next();

        System.out.println("Enter quantity:");
        int quantity = scanner.nextInt();

        Stock stock = getStock(symbol);
        if (stock != null) {
            portfolio.removeStock(stock, quantity);
            System.out.println("Stock sold successfully!");
        } else {
            System.out.println("Stock not found.");
        }
    }

    private void viewPortfolio() {
        System.out.println("Portfolio Balance: " + portfolio.getBalance());
        System.out.println("Stocks:");
        for (Stock stock : portfolio.getStocks()) {
            System.out.println(stock.getSymbol() + ": " + stock.getPrice());
        }
    }

    private Stock getStock(String symbol) {
        for (Stock stock : marketData) {
            if (stock.getSymbol().equals(symbol)) {
                return stock;
            }
        }
        return null;
    }

    public static void main(String[] args) {
        StockTradingPlatform platform = new StockTradingPlatform();
        platform.run();
    }
}
